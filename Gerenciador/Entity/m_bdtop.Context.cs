//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gerenciador.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class bd_top : DbContext
    {
        public bd_top()
            : base("name=bd_top")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tb_area> tb_area { get; set; }
        public virtual DbSet<tb_curso> tb_curso { get; set; }
        public virtual DbSet<tb_detalhesResultado> tb_detalhesResultado { get; set; }
        public virtual DbSet<tb_faculdade> tb_faculdade { get; set; }
        public virtual DbSet<tb_nivelAcademico> tb_nivelAcademico { get; set; }
        public virtual DbSet<tb_notaMec> tb_notaMec { get; set; }
        public virtual DbSet<tb_pergunta> tb_pergunta { get; set; }
        public virtual DbSet<tb_resposta> tb_resposta { get; set; }
        public virtual DbSet<tb_teste> tb_teste { get; set; }
        public virtual DbSet<tb_tipoContato> tb_tipoContato { get; set; }
        public virtual DbSet<tb_tipoContatoFaculdade> tb_tipoContatoFaculdade { get; set; }
        public virtual DbSet<tb_usuario> tb_usuario { get; set; }
        public virtual DbSet<tb_contato> tb_contato { get; set; }
        public virtual DbSet<tb_contatoFaculdade> tb_contatoFaculdade { get; set; }
        public virtual DbSet<tb_email> tb_email { get; set; }
        public virtual DbSet<v_RelatorioCurso> v_RelatorioCurso { get; set; }
        public virtual DbSet<v_relatorioFaculdades> v_relatorioFaculdades { get; set; }
        public virtual DbSet<v_relatorioNotaMec> v_relatorioNotaMec { get; set; }
        public virtual DbSet<v_RelatorioQuestoes> v_RelatorioQuestoes { get; set; }
        public virtual DbSet<v_relatorioResultado> v_relatorioResultado { get; set; }
        public virtual DbSet<v_relatorioUsuario> v_relatorioUsuario { get; set; }
    
        public virtual int sp_atualizaCadastro(Nullable<int> puserId, string pemailDesc, Nullable<int> pnivelAcad, string pcidade, string puf, string pcontDescTel, string pcontDescCel, string pftuser, string pbio)
        {
            var puserIdParameter = puserId.HasValue ?
                new ObjectParameter("puserId", puserId) :
                new ObjectParameter("puserId", typeof(int));
    
            var pemailDescParameter = pemailDesc != null ?
                new ObjectParameter("pemailDesc", pemailDesc) :
                new ObjectParameter("pemailDesc", typeof(string));
    
            var pnivelAcadParameter = pnivelAcad.HasValue ?
                new ObjectParameter("pnivelAcad", pnivelAcad) :
                new ObjectParameter("pnivelAcad", typeof(int));
    
            var pcidadeParameter = pcidade != null ?
                new ObjectParameter("pcidade", pcidade) :
                new ObjectParameter("pcidade", typeof(string));
    
            var pufParameter = puf != null ?
                new ObjectParameter("puf", puf) :
                new ObjectParameter("puf", typeof(string));
    
            var pcontDescTelParameter = pcontDescTel != null ?
                new ObjectParameter("pcontDescTel", pcontDescTel) :
                new ObjectParameter("pcontDescTel", typeof(string));
    
            var pcontDescCelParameter = pcontDescCel != null ?
                new ObjectParameter("pcontDescCel", pcontDescCel) :
                new ObjectParameter("pcontDescCel", typeof(string));
    
            var pftuserParameter = pftuser != null ?
                new ObjectParameter("pftuser", pftuser) :
                new ObjectParameter("pftuser", typeof(string));
    
            var pbioParameter = pbio != null ?
                new ObjectParameter("pbio", pbio) :
                new ObjectParameter("pbio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_atualizaCadastro", puserIdParameter, pemailDescParameter, pnivelAcadParameter, pcidadeParameter, pufParameter, pcontDescTelParameter, pcontDescCelParameter, pftuserParameter, pbioParameter);
        }
    
        public virtual int sp_AtualizaCurso(Nullable<int> pIdCur, Nullable<int> pIdArea, string pNome, string pTipo, string pDuracao, string pDesc, Nullable<int> pMax, Nullable<int> pMin)
        {
            var pIdCurParameter = pIdCur.HasValue ?
                new ObjectParameter("pIdCur", pIdCur) :
                new ObjectParameter("pIdCur", typeof(int));
    
            var pIdAreaParameter = pIdArea.HasValue ?
                new ObjectParameter("pIdArea", pIdArea) :
                new ObjectParameter("pIdArea", typeof(int));
    
            var pNomeParameter = pNome != null ?
                new ObjectParameter("pNome", pNome) :
                new ObjectParameter("pNome", typeof(string));
    
            var pTipoParameter = pTipo != null ?
                new ObjectParameter("pTipo", pTipo) :
                new ObjectParameter("pTipo", typeof(string));
    
            var pDuracaoParameter = pDuracao != null ?
                new ObjectParameter("pDuracao", pDuracao) :
                new ObjectParameter("pDuracao", typeof(string));
    
            var pDescParameter = pDesc != null ?
                new ObjectParameter("pDesc", pDesc) :
                new ObjectParameter("pDesc", typeof(string));
    
            var pMaxParameter = pMax.HasValue ?
                new ObjectParameter("pMax", pMax) :
                new ObjectParameter("pMax", typeof(int));
    
            var pMinParameter = pMin.HasValue ?
                new ObjectParameter("pMin", pMin) :
                new ObjectParameter("pMin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AtualizaCurso", pIdCurParameter, pIdAreaParameter, pNomeParameter, pTipoParameter, pDuracaoParameter, pDescParameter, pMaxParameter, pMinParameter);
        }
    
        public virtual int sp_atualizaFaculdade(Nullable<int> pId, string pNome, string pEnd, string pUf, string pEstado, string pCidade, string pSite, string pEmail, string pTel, string pCel, string pFax)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pNomeParameter = pNome != null ?
                new ObjectParameter("pNome", pNome) :
                new ObjectParameter("pNome", typeof(string));
    
            var pEndParameter = pEnd != null ?
                new ObjectParameter("pEnd", pEnd) :
                new ObjectParameter("pEnd", typeof(string));
    
            var pUfParameter = pUf != null ?
                new ObjectParameter("pUf", pUf) :
                new ObjectParameter("pUf", typeof(string));
    
            var pEstadoParameter = pEstado != null ?
                new ObjectParameter("pEstado", pEstado) :
                new ObjectParameter("pEstado", typeof(string));
    
            var pCidadeParameter = pCidade != null ?
                new ObjectParameter("pCidade", pCidade) :
                new ObjectParameter("pCidade", typeof(string));
    
            var pSiteParameter = pSite != null ?
                new ObjectParameter("pSite", pSite) :
                new ObjectParameter("pSite", typeof(string));
    
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("pEmail", pEmail) :
                new ObjectParameter("pEmail", typeof(string));
    
            var pTelParameter = pTel != null ?
                new ObjectParameter("pTel", pTel) :
                new ObjectParameter("pTel", typeof(string));
    
            var pCelParameter = pCel != null ?
                new ObjectParameter("pCel", pCel) :
                new ObjectParameter("pCel", typeof(string));
    
            var pFaxParameter = pFax != null ?
                new ObjectParameter("pFax", pFax) :
                new ObjectParameter("pFax", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_atualizaFaculdade", pIdParameter, pNomeParameter, pEndParameter, pUfParameter, pEstadoParameter, pCidadeParameter, pSiteParameter, pEmailParameter, pTelParameter, pCelParameter, pFaxParameter);
        }
    
        public virtual int sp_atualizarQuestao(Nullable<int> pIdPergunta, Nullable<int> pIdResposta, string pDescResp, Nullable<double> pPercExatas, Nullable<double> pPercHumanas, Nullable<double> pPercBio)
        {
            var pIdPerguntaParameter = pIdPergunta.HasValue ?
                new ObjectParameter("pIdPergunta", pIdPergunta) :
                new ObjectParameter("pIdPergunta", typeof(int));
    
            var pIdRespostaParameter = pIdResposta.HasValue ?
                new ObjectParameter("pIdResposta", pIdResposta) :
                new ObjectParameter("pIdResposta", typeof(int));
    
            var pDescRespParameter = pDescResp != null ?
                new ObjectParameter("pDescResp", pDescResp) :
                new ObjectParameter("pDescResp", typeof(string));
    
            var pPercExatasParameter = pPercExatas.HasValue ?
                new ObjectParameter("pPercExatas", pPercExatas) :
                new ObjectParameter("pPercExatas", typeof(double));
    
            var pPercHumanasParameter = pPercHumanas.HasValue ?
                new ObjectParameter("pPercHumanas", pPercHumanas) :
                new ObjectParameter("pPercHumanas", typeof(double));
    
            var pPercBioParameter = pPercBio.HasValue ?
                new ObjectParameter("pPercBio", pPercBio) :
                new ObjectParameter("pPercBio", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_atualizarQuestao", pIdPerguntaParameter, pIdRespostaParameter, pDescRespParameter, pPercExatasParameter, pPercHumanasParameter, pPercBioParameter);
        }
    
        public virtual int sp_inserirContatosFaculdade(string pFaculNome, Nullable<int> pTipoCont, string pDescCont)
        {
            var pFaculNomeParameter = pFaculNome != null ?
                new ObjectParameter("pFaculNome", pFaculNome) :
                new ObjectParameter("pFaculNome", typeof(string));
    
            var pTipoContParameter = pTipoCont.HasValue ?
                new ObjectParameter("pTipoCont", pTipoCont) :
                new ObjectParameter("pTipoCont", typeof(int));
    
            var pDescContParameter = pDescCont != null ?
                new ObjectParameter("pDescCont", pDescCont) :
                new ObjectParameter("pDescCont", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_inserirContatosFaculdade", pFaculNomeParameter, pTipoContParameter, pDescContParameter);
        }
    
        public virtual int sp_inserirNovoEmail(string pUsername, string pDescEmail)
        {
            var pUsernameParameter = pUsername != null ?
                new ObjectParameter("pUsername", pUsername) :
                new ObjectParameter("pUsername", typeof(string));
    
            var pDescEmailParameter = pDescEmail != null ?
                new ObjectParameter("pDescEmail", pDescEmail) :
                new ObjectParameter("pDescEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_inserirNovoEmail", pUsernameParameter, pDescEmailParameter);
        }
    
        public virtual int sp_inserirNovosContatos(string pUsername, string pContTelDesc, string pContCelDesc)
        {
            var pUsernameParameter = pUsername != null ?
                new ObjectParameter("pUsername", pUsername) :
                new ObjectParameter("pUsername", typeof(string));
    
            var pContTelDescParameter = pContTelDesc != null ?
                new ObjectParameter("pContTelDesc", pContTelDesc) :
                new ObjectParameter("pContTelDesc", typeof(string));
    
            var pContCelDescParameter = pContCelDesc != null ?
                new ObjectParameter("pContCelDesc", pContCelDesc) :
                new ObjectParameter("pContCelDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_inserirNovosContatos", pUsernameParameter, pContTelDescParameter, pContCelDescParameter);
        }
    
        public virtual int sp_inserirNovoUsuario(string pNome, string pSexo, Nullable<System.DateTime> pDataNasc, string pUsername, string pSenha, string pUf, string pCidade, Nullable<int> pNivel, Nullable<System.DateTime> pDataCad, Nullable<byte> pFezTeste, string pImgAvatar, string pBio)
        {
            var pNomeParameter = pNome != null ?
                new ObjectParameter("pNome", pNome) :
                new ObjectParameter("pNome", typeof(string));
    
            var pSexoParameter = pSexo != null ?
                new ObjectParameter("pSexo", pSexo) :
                new ObjectParameter("pSexo", typeof(string));
    
            var pDataNascParameter = pDataNasc.HasValue ?
                new ObjectParameter("pDataNasc", pDataNasc) :
                new ObjectParameter("pDataNasc", typeof(System.DateTime));
    
            var pUsernameParameter = pUsername != null ?
                new ObjectParameter("pUsername", pUsername) :
                new ObjectParameter("pUsername", typeof(string));
    
            var pSenhaParameter = pSenha != null ?
                new ObjectParameter("pSenha", pSenha) :
                new ObjectParameter("pSenha", typeof(string));
    
            var pUfParameter = pUf != null ?
                new ObjectParameter("pUf", pUf) :
                new ObjectParameter("pUf", typeof(string));
    
            var pCidadeParameter = pCidade != null ?
                new ObjectParameter("pCidade", pCidade) :
                new ObjectParameter("pCidade", typeof(string));
    
            var pNivelParameter = pNivel.HasValue ?
                new ObjectParameter("pNivel", pNivel) :
                new ObjectParameter("pNivel", typeof(int));
    
            var pDataCadParameter = pDataCad.HasValue ?
                new ObjectParameter("pDataCad", pDataCad) :
                new ObjectParameter("pDataCad", typeof(System.DateTime));
    
            var pFezTesteParameter = pFezTeste.HasValue ?
                new ObjectParameter("pFezTeste", pFezTeste) :
                new ObjectParameter("pFezTeste", typeof(byte));
    
            var pImgAvatarParameter = pImgAvatar != null ?
                new ObjectParameter("pImgAvatar", pImgAvatar) :
                new ObjectParameter("pImgAvatar", typeof(string));
    
            var pBioParameter = pBio != null ?
                new ObjectParameter("pBio", pBio) :
                new ObjectParameter("pBio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_inserirNovoUsuario", pNomeParameter, pSexoParameter, pDataNascParameter, pUsernameParameter, pSenhaParameter, pUfParameter, pCidadeParameter, pNivelParameter, pDataCadParameter, pFezTesteParameter, pImgAvatarParameter, pBioParameter);
        }
    
        public virtual int sp_zerarIncrementoTabela(string pTabela)
        {
            var pTabelaParameter = pTabela != null ?
                new ObjectParameter("pTabela", pTabela) :
                new ObjectParameter("pTabela", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_zerarIncrementoTabela", pTabelaParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_iniciarTeste(Nullable<int> pIdUser, Nullable<System.DateTime> pDataInicio)
        {
            var pIdUserParameter = pIdUser.HasValue ?
                new ObjectParameter("pIdUser", pIdUser) :
                new ObjectParameter("pIdUser", typeof(int));
    
            var pDataInicioParameter = pDataInicio.HasValue ?
                new ObjectParameter("pDataInicio", pDataInicio) :
                new ObjectParameter("pDataInicio", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_iniciarTeste", pIdUserParameter, pDataInicioParameter);
        }
    
        public virtual int sp_inserirDetalhesDoResultado(Nullable<int> pIdUser, Nullable<int> pIdTeste, Nullable<int> pIdCurso, Nullable<double> pPtsExatas, Nullable<double> pPtsHumanas, Nullable<double> pPtsBiologicas)
        {
            var pIdUserParameter = pIdUser.HasValue ?
                new ObjectParameter("pIdUser", pIdUser) :
                new ObjectParameter("pIdUser", typeof(int));
    
            var pIdTesteParameter = pIdTeste.HasValue ?
                new ObjectParameter("pIdTeste", pIdTeste) :
                new ObjectParameter("pIdTeste", typeof(int));
    
            var pIdCursoParameter = pIdCurso.HasValue ?
                new ObjectParameter("pIdCurso", pIdCurso) :
                new ObjectParameter("pIdCurso", typeof(int));
    
            var pPtsExatasParameter = pPtsExatas.HasValue ?
                new ObjectParameter("pPtsExatas", pPtsExatas) :
                new ObjectParameter("pPtsExatas", typeof(double));
    
            var pPtsHumanasParameter = pPtsHumanas.HasValue ?
                new ObjectParameter("pPtsHumanas", pPtsHumanas) :
                new ObjectParameter("pPtsHumanas", typeof(double));
    
            var pPtsBiologicasParameter = pPtsBiologicas.HasValue ?
                new ObjectParameter("pPtsBiologicas", pPtsBiologicas) :
                new ObjectParameter("pPtsBiologicas", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_inserirDetalhesDoResultado", pIdUserParameter, pIdTesteParameter, pIdCursoParameter, pPtsExatasParameter, pPtsHumanasParameter, pPtsBiologicasParameter);
        }
    
        public virtual int sp_novoTeste(Nullable<int> pId)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_novoTeste", pIdParameter);
        }
    
        public virtual int sp_retornarCursoCompatibilidade(string pDescArea, Nullable<int> pValorTotalArea)
        {
            var pDescAreaParameter = pDescArea != null ?
                new ObjectParameter("pDescArea", pDescArea) :
                new ObjectParameter("pDescArea", typeof(string));
    
            var pValorTotalAreaParameter = pValorTotalArea.HasValue ?
                new ObjectParameter("pValorTotalArea", pValorTotalArea) :
                new ObjectParameter("pValorTotalArea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_retornarCursoCompatibilidade", pDescAreaParameter, pValorTotalAreaParameter);
        }
    
        public virtual int sp_inserirResposta(Nullable<int> pIdPerg, string pDescPerg, Nullable<double> pExatas, Nullable<double> pHumanas, Nullable<double> pBiologicas)
        {
            var pIdPergParameter = pIdPerg.HasValue ?
                new ObjectParameter("pIdPerg", pIdPerg) :
                new ObjectParameter("pIdPerg", typeof(int));
    
            var pDescPergParameter = pDescPerg != null ?
                new ObjectParameter("pDescPerg", pDescPerg) :
                new ObjectParameter("pDescPerg", typeof(string));
    
            var pExatasParameter = pExatas.HasValue ?
                new ObjectParameter("pExatas", pExatas) :
                new ObjectParameter("pExatas", typeof(double));
    
            var pHumanasParameter = pHumanas.HasValue ?
                new ObjectParameter("pHumanas", pHumanas) :
                new ObjectParameter("pHumanas", typeof(double));
    
            var pBiologicasParameter = pBiologicas.HasValue ?
                new ObjectParameter("pBiologicas", pBiologicas) :
                new ObjectParameter("pBiologicas", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_inserirResposta", pIdPergParameter, pDescPergParameter, pExatasParameter, pHumanasParameter, pBiologicasParameter);
        }
    }
}
